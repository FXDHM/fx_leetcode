找出一个数组当中长度相同的，且不共享字母的两个元素长度乘积的最大值。
思路：位运算，如果出现‘a’，则1左移‘a’-‘a’位，依次类推。
class Solution {
public:
    int maxProduct(vector<string>& words) {
        vector<int> judge(words.size(), 0);
        for(int i = 0; i < words.size(); ++i)
        {
            for(int j = 0; j < words[i].size(); ++j)
                judge[i] |= 1 << (words[i][j] - 'a');
        }
        int maxi = 0;
        for(int i = 0; i < words.size(); ++i)
        {
            for(int j = i; j < words.size(); ++j)
            {
                if(((judge[i] & judge[j]) == 0)  && maxi < words[i].size() * words[j].size())
                    maxi = words[i].size() * words[j].size();                 
            }
        }
        return maxi;
    }
};
